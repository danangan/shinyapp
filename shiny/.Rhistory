shiny::runApp('~/Algoritma/advisory-master/advisory')
knitr::opts_chunk$set(echo = TRUE)
str(bakery)
bakery <- read.csv('data.csv')
str(bakery)
head(bakery)
head(bakery,10)
bakery <- read.csv('data.csv')
str(bakery)
head(bakery,10)
plot(bakery$Date, bakery$Item)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggthemes)
bakery <- read.csv('data.csv')
str(bakery)
head(bakery,10)
ggplot(bakery, aes(x = Date, y = Item)) +
ggplot(bakery, aes(x = Date, y = Item))+
geom_col()
options(scipen = 9999)
rm(list=ls())
library(ggplot2)
library(GGally)
library(ggthemes)
library(ggpubr)
library(leaflet)
library(lubridate)
vids <- read.csv("USvideos.csv")
#names(vids)
str(vids)
# we can use the native Date
#vids$trending_date <- as.Date(vids$trending_date, '%y.%d.%m')
# or use the lubridate function ydm --> yead day month
vids$trending_date <- ydm(vids$trending_date)
#year(head(vids$trending_date))
vids$title <- as.character(vids$title)
#str(vids)
vids$publish_time <- ydm_hms(vids$publish_time, tz="America/New_York")
#manipulasi categori id, dikonversi
prop.table(table(vids$category_id))
#vids$publish_time <- l
#
str(vids)
mostlike <- vids[vids$likes == max(vids$likes), ]
mostlike
year(mostlike$trending_date)
month(mostlike$trending_date)
day(mostlike$trending_date)
mostdislike <- vids[vids$dislikes == max(vids$dislikes), ]
#mostdislike
logan <- vids[vids$channel_title == 'Logan Paul Vlogs', "title"]
logan
vids$trending_date <- ydm(vids$trending_date)
vids$title <- as.character(vids$title)
vids$category_id <- sapply(as.character(vids$category_id), switch,
"1" = "Film and Animation",
"2" = "Autos and Vehicles",
"10" = "Music",
"15" = "Pets and Animals",
"17" = "Sports",
"19" = "Travel and Events",
"20" = "Gaming",
"22" = "People and Blogs",
"23" = "Comedy",
"24" = "Entertainment",
"25" = "News and Politics",
"26" = "Howto and Style",
"27" = "Education",
"28" = "Science and Technology",
"29" = "Nonprofit and Activism",
"43" = "Shows")
vids$category_id <- as.factor(vids$category_id)
head(vids$publish_time)
vids$publish_time <- ymd_hms(vids$publish_time,tz="America/New_York")
most <- vids[vids$views == max(vids$views),]
year(most$trending_date)
month(most$trending_date)
day(most$trending_date)
vids$publish_hour <- hour(vids$publish_time)
str(vids)
pw <- function(x){
if(x < 8){
x <- "12am to 8am"
}else if(x >= 8 & x < 16){
x <- "8am to 3pm"
}else{
x <- "3pm to 12am"
}
}
vids$publish_when <- as.factor(sapply(vids$publish_hour, pw))
runApp('shiny')
shiny::runApp('shiny')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggthemes)
library(dplyr)
table
head(bakery)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggthemes)
library(dplyr)
bakery <- read.csv('data.csv')
bakery
bakery <- read.csv('data.csv')
bakery %>%
group_by_(.dots=c("Date","Item")) %>%
summarize(x=length(Item))
bakery
bakery <- read.csv('data.csv')
bakery %>%
group_by_(.dots=c("Date","Item")) %>%
summarize(total=length(Item))
bakery
bakery <- read.csv('data.csv')
bakery %>%
group_by_(.dots=c("Date","Item")) %>%
summarize(total=length(Item))
bakery <- read.csv('data.csv')
bakery <- bakery %>%
group_by_(.dots=c("Date","Item")) %>%
summarize(total=length(Item))
bakery <- read.csv('data.csv')
bakery_by_day <- bakery %>%
group_by_(.dots=c("Date","Item")) %>%
summarize(total=length(Item))
bakery <- read.csv('data.csv')
bakery_by_day <- bakery %>%
group_by_(.dots=c("Date","Item")) %>%
summarize(total=length(Item))
bakery_by_day
ggplot(bakery_day, aes(x=Date, y=total))
ggplot(bakery_by_day, aes(x=Date, y=total)) +
geom_col()
ggplot(bakery_by_day, aes(x=Date, y=total)) +
geom_col() +
facet_grid(Item ~)
ggplot(bakery_by_day, aes(x=Date, y=total)) +
geom_col() +
facet_grid(Item ~.)
ggplot(bakery_by_day, aes(x=Date, y=total)) +
geom_col() +
facet_grid(. ~ Item)
bakery <- read.csv('data.csv')
bakery_by_day <- bakery %>%
filter(Item == 'Bread' | Item == 'Coffee') %>%
group_by_(.dots=c("Date","Item")) %>%
summarize(total=length(Item))
bakery_by_day
ggplot(bakery_by_day, aes(x=Date, y=total)) +
geom_col() +
facet_grid(. ~ Item)
bakery <- read.csv('data.csv')
bakery_by_day <- bakery %>%
filter(Item == 'Bread' | Item == 'Coffee') %>%
group_by_(.dots=c("Date","Item")) %>%
summarize(total=length(Item))
bakery_by_day
ggplot(bakery_by_day, aes(x=Date, y=total)) +
geom_col() +
facet_wrap(~ Item)
shiny::runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
plotly(plot)
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
table(table$item)
table(table$item)
table(bakery$item)
table(bakery$Item)
runApp('shiny')
runApp('shiny')
str(bakery)
bakery$Date <- ymd(bakery$Date)
library(lubridate)
bakery$Date <- ymd(bakery$Date)
str(bakery)
print(input$dateRange)
runApp('shiny')
runApp('shiny')
shiny::runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
?lubridate
runApp('shiny')
#table(bakery$Item)
bakery$Date <- ymd(bakery$Date)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(lubridate)
?lubridate
bakery <- read.csv('data.csv')
str(bakery)
bakery_by_day <- bakery %>%
filter(Item == 'Bread' | Item == 'Coffee') %>%
group_by_(.dots=c("Date","Item")) %>%
summarize(total=length(Item))
bakery_by_day
ggplot(bakery_by_day, aes(x=Date, y=total)) +
geom_col() +
facet_wrap(~ Item)
#table(bakery$Item)
bakery$Date <- ymd(bakery$Date)
max(bakery$Date)
summary(cars)
plot(pressure)
runApp('shiny')
runApp('~/Algoritma/advisory-master/advisory')
runApp('shiny')
runApp('shiny')
runApp('shiny')
max(bakery$Time)
bakery$Time <- hms(bakery$Time)
max(bakery$Date)
max(bakery$Time)
head(bakery)
max(bakery)
max(bakery$Time)
min(bakery$Time)
min(bakery$Time)
bakery$Time
anyNA(bakery)
bakery$TimePeriod <- apply(bakery$Time, FUN = x)
#table(bakery$Item)
bakery$Date <- ymd(bakery$Date)
bakery$Time <- hms(bakery$Time)
max(bakery$Date)
x <- function(x) {
if (x > hms('8:00:00') && x < hms('12:00:00')) {
'8am to 12pm'
}
if (x > hms('12:00:00') && x < hms('16:00:00')) {
'12pm to 4pm'
}
if (x > hms('16:00:00')) {
'4pm and beyond'
}
}
bakery$TimePeriod <- apply(bakery$Time, FUN = x)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(lubridate)
?lubridate
bakery <- read.csv('data.csv')
str(bakery)
bakery_by_day <- bakery %>%
filter(Item == 'Bread' | Item == 'Coffee') %>%
group_by_(.dots=c("Date","Item")) %>%
summarize(total=length(Item))
anyNA(bakery)
#table(bakery$Item)
bakery$Date <- ymd(bakery$Date)
bakery$Time <- hms(bakery$Time)
max(bakery$Date)
x <- function(x) {
if (x > hms('8:00:00') && x < hms('12:00:00')) {
'8am to 12pm'
}
if (x > hms('12:00:00') && x < hms('16:00:00')) {
'12pm to 4pm'
}
if (x > hms('16:00:00')) {
'4pm and beyond'
}
}
bakery$TimePeriod <- apply(bakery$Time, FUN = x)
bakery$Time
bakery$TimePeriod
bakery
bakery$TimePeriod <- lapply(bakery$Time, FUN = x)
bakery
test
#table(bakery$Item)
bakery$Date <- ymd(bakery$Date)
bakery$Time <- hms(bakery$Time)
max(bakery$Date)
test <- head(bakery)
x <- function(x) {
if (x > hms('8:00:00') && x < hms('12:00:00')) {
'8am to 12pm'
}
if (x > hms('12:00:00') && x < hms('16:00:00')) {
'12pm to 4pm'
}
if (x > hms('16:00:00')) {
'4pm and beyond'
}
}
test$TimePeriod <- lapply(test$Time, FUN = x)
test
#table(bakery$Item)
bakery$Date <- ymd(bakery$Date)
bakery$Time <- hms(bakery$Time)
test <- head(bakery)
x <- function(x) {
print(x)
if (x > hms('8:00:00') && x < hms('12:00:00')) {
'8am to 12pm'
}
if (x > hms('12:00:00') && x < hms('16:00:00')) {
'12pm to 4pm'
}
if (x > hms('16:00:00')) {
'4pm and beyond'
}
}
test$TimePeriod <- lapply(test$Time, FUN = x)
test
test$Time
#table(bakery$Item)
bakery$Date <- ymd(bakery$Date)
bakery$Time <- hms(bakery$Time)
test <- head(bakery)
x <- function(x) {
print(x)
if (x > hms('8:00:00') && x < hms('12:00:00')) {
'8am to 12pm'
}
if (x > hms('12:00:00') && x < hms('16:00:00')) {
'12pm to 4pm'
}
if (x > hms('16:00:00')) {
'4pm and beyond'
}
}
test$Time
test$TimePeriod <- lapply(test$Time, FUN = x)
test
type(test$Time)
test$Time
test$TimePeriod <- sapply(test$Time, FUN = x)
test
#table(bakery$Item)
bakery$Date <- ymd(bakery$Date)
bakery$Time <- hms(bakery$Time)
test <- head(bakery)
x <- function(x) {
print(x)
if (x > hms('8:00:00') && x < hms('12:00:00')) {
x <- '8am to 12pm'
}
if (x > hms('12:00:00') && x < hms('16:00:00')) {
x <-'12pm to 4pm'
}
if (x > hms('16:00:00')) {
x <- '4pm and beyond'
}
}
test$Time
test$TimePeriod <- sapply(test$Time, FUN = x)
test
#table(bakery$Item)
bakery$Date <- ymd(bakery$Date)
bakery$Time <- hour(bakery$Time)
test <- head(bakery)
x <- function(x) {
print(x)
if (x > hms('8:00:00') && x < hms('12:00:00')) {
x <- '8am to 12pm'
}
if (x > hms('12:00:00') && x < hms('16:00:00')) {
x <-'12pm to 4pm'
}
if (x > hms('16:00:00')) {
x <- '4pm and beyond'
}
}
test$Time
test$TimePeriod <- sapply(test$Time, FUN = x)
test
#table(bakery$Item)
bakery$Date <- ymd(bakery$Date)
bakery$Hour <- hour(bakery$Time)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggthemes)
library(dplyr)
library(lubridate)
?lubridate
bakery <- read.csv('data.csv')
str(bakery)
bakery_by_day <- bakery %>%
filter(Item == 'Bread' | Item == 'Coffee') %>%
group_by_(.dots=c("Date","Item")) %>%
summarize(total=length(Item))
anyNA(bakery)
#table(bakery$Item)
bakery$Date <- ymd(bakery$Date)
bakery$Hour <- hour(bakery$Time)
#table(bakery$Item)
bakery$Date <- ymd(bakery$Date)
bakery$Time <- hms(bakery$Time)
bakery$Hour <- hour(bakery$Time)
test <- head(bakery)
x <- function(x) {
print(x)
if (x > hms('8:00:00') && x < hms('12:00:00')) {
x <- '8am to 12pm'
}
if (x > hms('12:00:00') && x < hms('16:00:00')) {
x <-'12pm to 4pm'
}
if (x > hms('16:00:00')) {
x <- '4pm and beyond'
}
}
test$Time
test$TimePeriod <- sapply(test$Time, FUN = x)
test
max(bakery$Date)
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
bakery
runApp('shiny')
runApp('shiny')
table(bakery)
table(bakery$Item)
max(table(bakery$Item))
table(bakery$Item)
popular.item
popular.item <- bakery %>%
group_by(Item) %>%
filter(value == max(value)) %>%
arrange(Item)
popular.item <- bakery %>%
group_by(Item)
popular.item
popular.item <- bakery %>%
group_by(Item) %>%
summarize(total=length(Item))
popular.item
popular.item <- bakery %>%
group_by(Item) %>%
summarize(total=length(Item)) %>%
arrange(total)
popular.item <- bakery %>%
group_by(Item) %>%
summarize(total=length(Item)) %>%
arrange(total)
popular.item
popular.item <- bakery %>%
group_by(Item) %>%
summarize(total=length(Item)) %>%
arrange(-total)
popular.item <- bakery %>%
group_by(Item) %>%
summarize(total=length(Item)) %>%
arrange(-total)
popular.item
popular.item[1]
popular.item[1,]
popular.item[1,1]
runApp('shiny')
